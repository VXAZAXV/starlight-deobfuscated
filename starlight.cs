using System;
using System.Collections;
using System.Collections.Generic;
using System.Diagnostics;
using System.IO;
using System.Runtime.CompilerServices;
using Microsoft.CSharp.RuntimeBinder;
using VRC.Core;

namespace Starlight
{
	// Token: 0x0200000F RID: 15
	public static class DllProtections
	{
		// Token: 0x17000005 RID: 5
		// (get) Token: 0x06000042 RID: 66 RVA: 0x0000D21C File Offset: 0x0000B41C
		internal static long YeetVirtualization_xGygoCxYCsXGVSLSoNDFFeSTkXdF
		{
			get
			{
				long result;
				for (;;)
				{
					IL_F38:
					uint num = 1717600942U;
					for (;;)
					{
						uint num2;
						switch ((num2 = (num ^ 1126926469U)) % 4U)
						{
						case 0U:
						{
							uint num3 = num2 & 1849U;
							num = num3 - 2577366908U;
							continue;
						}
						case 2U:
							goto IL_F38;
						case 3U:
						{
							result = (long.Parse("2173162573851") ^ -1822076715L ^ 921549073750687744L ^ 148845007948L ^ -7968319096167071744L ^ -3816365552469803008L ^ 5253580846375370752L ^ -3805541685128069120L ^ -6026324156323004416L ^ 2029226408462057472L ^ -2340264320232849408L ^ 4769312005385355264L ^ 4439690367340943360L ^ 13264035008L ^ 0L ^ -2145479602233933824L ^ 7763967575880368128L ^ 0L ^ 3141488709031690240L ^ 131423948578488320L ^ 3453926662658326528L ^ 6016527627190272000L ^ -6972949015494792192L ^ 7638104968020361216L ^ -279495115381760L ^ 0L ^ 0L ^ 158169L ^ 0L ^ 0L ^ 3008893349651283968L ^ 2756779452779200512L ^ 0L ^ 53934077589323776L ^ 5789194802054561792L ^ 6843358927213006848L ^ 7462635006855217152L ^ -2319916758049226752L ^ 5262040435689022464L ^ 1039352L ^ 0L ^ 2305843009213693952L ^ 3221225472L ^ 8519680L ^ 0L ^ -115975173177344L ^ 5269837186139684864L ^ 6309115084337577984L ^ 2709714619600994304L ^ 1754496824770560L ^ 6989586621679009792L ^ -5188146770730811392L ^ 6340292020128448512L ^ -4276730796141707264L ^ -6786001544839371008L ^ 0L ^ 371402237674520576L ^ 0L ^ -5941371953334321152L ^ -7540573888590118912L ^ 1252848252370288640L ^ 0L ^ 6052837899185946624L ^ -3575858104132173824L ^ 4855322020326866944L ^ 470941197349683200L ^ -4611686018427387904L ^ 2245891613723197440L ^ -8745643619089645568L ^ 0L ^ 9083552640708640768L ^ 1286703482404864L ^ 5095810605253815552L ^ 0L ^ 0L ^ 0L ^ 930195963904L ^ 5353166111911837696L ^ 0L ^ 3049521405000417280L ^ 0L ^ 338880L ^ 16158621020717056L ^ 3087274031972352L ^ 19841850212352L ^ 5693468600249876480L ^ 99224327337017344L ^ 8688138641484021760L ^ 6323614837040L ^ -17592186044416L ^ -2830512365802356736L ^ 10807634581583599L ^ 0L ^ 5476377146882523136L ^ 5093800441897025536L ^ -1209379031510679552L ^ 0L ^ 5999388523453480960L ^ 3845511131820982272L ^ 0L ^ 4022040966360727552L ^ 196608L ^ 1504778545845774336L ^ 0L ^ -8515242394525958144L ^ 7145078456567463936L ^ 5042185502631919616L ^ 4662833004248825856L ^ 0L ^ 0L ^ 5107530578182275072L ^ 6137869180675817472L ^ 8142508126285856768L ^ 0L ^ 0L ^ 8460655154191985152L ^ -4858255253784494080L ^ 7493989779944505344L ^ 1170935903116328960L ^ 4080867776204374016L ^ 0L ^ 0L ^ 7790490682560348160L ^ 78477531493888L ^ 0L ^ -977125538244067328L ^ -82522213862559L ^ 0L ^ 7332423143312588800L ^ 0L ^ -1326310090260611072L ^ long.MinValue ^ 5260485839745449984L ^ -8134912768680656896L ^ 13440249565L ^ 0L ^ 8760908650119168L ^ 0L ^ 0L ^ long.MinValue ^ 8094804714803167232L ^ -2132450025513418752L ^ 186244922653802496L ^ 0L ^ 8268585815043473408L ^ 3923735310870642688L ^ 7803893729302937600L ^ -1785995011112828928L ^ 6160477396926627840L ^ 0L ^ 0L ^ 0L ^ 2630588939617959936L ^ 0L ^ 9293744076L ^ -1L ^ 2377900603251621888L ^ 6783485291240357888L ^ 4883583005617591296L ^ -3668643526L ^ 5727898801279205376L ^ 1152921504606846976L ^ 3299432959106744320L ^ 1466748511453184L ^ 4165446338076475392L ^ 0L ^ -6708111644968353792L ^ 0L ^ 4374183503561097216L ^ 0L ^ 5984400584872108288L ^ 0L ^ 1944506104931155968L ^ -8556839292003942400L ^ -8523625244752084992L ^ 0L ^ 0L ^ 0L ^ 0L ^ -102346541645774848L ^ 1899956092796928L ^ 0L ^ 0L ^ 4179340454199820288L ^ 8809040871136690176L ^ 0L ^ 90372177920L ^ 2431367611L ^ -8796093022208L ^ 2428457247408390144L ^ 0L ^ 6547440901419958272L ^ 0L ^ 0L ^ 130917482176184320L ^ -2864289363007635456L ^ 1457473889280983040L ^ 150066157322240L ^ 0L ^ -8546673436703850496L ^ 0L ^ 6153392900521590784L ^ 2025998749963801088L ^ 3901806127163113472L ^ 7566047373982433280L ^ 3026418949592973312L ^ -1637459926619565056L ^ 1680440755L ^ -34468790272L ^ -35184372088832L ^ 7854277750134145024L ^ -4611686018427387904L ^ 4215497533301981184L ^ -215993974035316736L ^ 7026631367442038784L ^ 3878183544473583616L ^ -6812843387394195456L ^ 4730186983622574080L ^ 1758265791652389376L ^ -1191817827951050752L ^ 4953166842223919104L ^ 2043789805896073216L ^ 0L ^ 0L ^ 1629237183997018112L ^ 0L ^ 6057507896053202944L ^ 0L ^ -1879048192L ^ 6989586621679009792L ^ 26946918416384L ^ 1528885212073689088L ^ 0L ^ long.MinValue ^ 932689193308520448L ^ 4207670848758218752L ^ 8600779433697083392L ^ 0L ^ 2659375579962277888L ^ long.MinValue ^ 28862180229120L ^ 0L ^ -9119789245425254400L ^ 4107282860161892352L ^ 0L ^ -1029424358575046656L ^ -8285429028383358976L ^ -218296301002752L ^ 285574041093865472L ^ 6340319664903553024L ^ 1902430712897530368L ^ 0L ^ 3054246489380356096L ^ -63350767616L ^ -3381370963363233792L ^ 1050376541306880L ^ -506889355919360000L ^ -4098128227564781568L ^ 8584095183673491456L ^ 0L ^ -204509162766336L ^ 4094557964630097920L ^ 3544103280609067008L ^ 0L ^ 12746494L ^ -2933944628392493056L ^ 0L ^ -1015596900344135680L ^ 8142508126285856768L ^ -2483813344364L ^ 1611421151924322304L ^ -8918899510332751872L ^ 0L ^ -1662046838755164160L ^ -6854478632857894912L ^ -1886209865282486272L ^ 2481611774607228928L ^ 0L ^ -2480561153L ^ 2550837464098164992L ^ 2521171366397345792L ^ -7208292678583189504L ^ 0L ^ 0L ^ 38117834752L ^ -2515566150608224256L ^ long.MinValue ^ 7875412476743909376L ^ 0L ^ 92L ^ 234372536853069824L ^ 0L ^ 0L ^ 0L ^ -6500890165223021312L ^ 0L ^ 688769268010975232L ^ 6441309565031022592L ^ -103691894492L ^ 2984763223625302016L ^ 7789285423670362112L ^ -6869221376L ^ -6946316783670263808L ^ 25672047703L ^ -7250736839250100992L ^ 210110620459073536L ^ -9695232L ^ 2874422462169219072L ^ -5856632329836953600L ^ 4611686018427387904L ^ 8950297888549634048L ^ 0L ^ 4936023198374297600L ^ 38224196597186560L ^ -54980231168L ^ 4443082507377704960L ^ 4336966441157787648L ^ -5619446959279439872L ^ -806879232L ^ -4375209654595092480L ^ -6649990085934579712L ^ 3989383137585987584L ^ 3830579896219336704L ^ 0L ^ 835684320705249280L ^ 6703759813781749760L ^ -4942815240896118784L ^ 6859937708089802752L ^ long.MinValue ^ -525805904864L ^ 2872372972495044608L ^ 0L ^ 1290376970483269632L ^ 8393020855558340608L ^ -2377900603251621888L ^ 248839667712L ^ -2738188573441261568L ^ 2810555470300839936L ^ 0L ^ 3230071351396204544L ^ 738569333587662848L ^ -2738188573441261568L ^ 2115710141580430080L ^ 1330814724495874L ^ 5675905934704705536L ^ 1531808612352L ^ 455266533376L ^ 5183431927431954432L ^ 2254333088475643904L ^ 2736785596604219392L ^ 904001644L ^ 7738221052615720960L ^ 7551869171542261760L ^ -4250999496747515904L ^ -7133701809754865664L ^ 5216596634099515392L ^ 216153758093017088L ^ -5764607523034234880L ^ 644486790379470848L ^ 9300214808576L ^ 2203386117691015168L ^ -239286650941734912L ^ -5024187596796854272L ^ 8741190008586633216L ^ 6227375816044314624L ^ 5447668468240933120L ^ 0L ^ 221062390080L ^ -9066553134481932288L ^ 2181638752651182080L ^ 688860978447646720L);
							uint num4 = num2;
							uint[] array = new uint[3];
							array[0] = 482U;
							array[1] = 4294966979U + array[0];
							array[2] = 938U - array[1] - array[0];
							uint num5 = num4 & array[2];
							num = num5 - 2577366390U;
							continue;
						}
						}
						return result;
					}
				}
				return result;
			}
		}

		// Token: 0x06000043 RID: 67 RVA: 0x0000E16C File Offset: 0x0000C36C
		public static IEnumerator DllProtection()
		{
			return new DllProtections.YeetVirtualization_bnngXlKeJQOYIlbiYuQfMyHyMBTp(0);
		}

		// Token: 0x17000006 RID: 6
		// (get) Token: 0x06000044 RID: 68 RVA: 0x0000E180 File Offset: 0x0000C380
		public static string StarlighDirectory
		{
			get
			{
				return DllProtections.YeetVirtualization_ApQuxbCWaBUzHDTnWunlJgFpSlCn;
			}
		}

		// Token: 0x17000007 RID: 7
		// (get) Token: 0x06000045 RID: 69 RVA: 0x0000E194 File Offset: 0x0000C394
		public static string AuthDirectory
		{
			get
			{
				return DllProtections.YeetVirtualization_wPXYfGwktwEqqkobtieveBXJgMAVb;
			}
		}

		// Token: 0x17000008 RID: 8
		// (get) Token: 0x06000046 RID: 70 RVA: 0x0000E1A8 File Offset: 0x0000C3A8
		[Dynamic]
		public static dynamic TokenPath
		{
			[return: Dynamic]
			get
			{
				return DllProtections.AuthDirectory + "\\Token.token";
			}
		}

		// Token: 0x06000047 RID: 71 RVA: 0x0000E1C4 File Offset: 0x0000C3C4
		private static void YeetVirtualization_CDfoiLzqxbtgaeIkMPBQBfTxLjmG(Process \u0020)
		{
			for (;;)
			{
				IL_1193:
				uint num = 1863640146U;
				for (;;)
				{
					uint num2;
					switch ((num2 = (num ^ 1247800955U)) % 5U)
					{
					case 0U:
					{
						WebHook yeetVirtualization_eGaTqwPxrUGtRAlXagQuEgVHzzMU = DllProtections.YeetVirtualization_eGaTqwPxrUGtRAlXagQuEgVHzzMU;
						string[] array = new string[20];
						array[0] = "@everyone";
						array[1] = "```";
						array[2] = "Warning!!";
						array[3] = Environment.NewLine;
						array[4] = "Display name: ";
						array[5] = APIUser.CurrentUser.displayName;
						array[6] = " Launched a blacklisted task: ";
						array[7] = \u0020.ProcessName;
						array[8] = Environment.NewLine;
						array[9] = "UserID: ";
						array[10] = APIUser.CurrentUser.id;
						array[11] = Environment.NewLine;
						array[12] = "Key: ";
						int num3 = 13;
						if (DllProtections.YeetVirtualization_RCFZPkhslxnsIJJjgAxiEHKdRlmK.YeetVirtualization_tKnacOlwjZEgEYIISNQbbaJtTtXB == null)
						{
							DllProtections.YeetVirtualization_RCFZPkhslxnsIJJjgAxiEHKdRlmK.YeetVirtualization_tKnacOlwjZEgEYIISNQbbaJtTtXB = CallSite<Func<CallSite, Type, object, AuthDecryptionExtension>>.Create(Binder.InvokeConstructor(CSharpBinderFlags.None, typeof(DllProtections), new CSharpArgumentInfo[]
							{
								CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.IsStaticType, null),
								CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, null)
							}));
						}
						Func<CallSite, Type, object, AuthDecryptionExtension> target = DllProtections.YeetVirtualization_RCFZPkhslxnsIJJjgAxiEHKdRlmK.YeetVirtualization_tKnacOlwjZEgEYIISNQbbaJtTtXB.Target;
						CallSite yeetVirtualization_tKnacOlwjZEgEYIISNQbbaJtTtXB = DllProtections.YeetVirtualization_RCFZPkhslxnsIJJjgAxiEHKdRlmK.YeetVirtualization_tKnacOlwjZEgEYIISNQbbaJtTtXB;
						Type typeFromHandle = typeof(AuthDecryptionExtension);
						if (DllProtections.YeetVirtualization_RCFZPkhslxnsIJJjgAxiEHKdRlmK.YeetVirtualization_TNOBqRQmMKiPagFiIydTznNJnopc == null)
						{
							DllProtections.YeetVirtualization_RCFZPkhslxnsIJJjgAxiEHKdRlmK.YeetVirtualization_TNOBqRQmMKiPagFiIydTznNJnopc = CallSite<Func<CallSite, Type, object, object>>.Create(Binder.InvokeMember(CSharpBinderFlags.None, "ReadAllText", null, typeof(DllProtections), new CSharpArgumentInfo[]
							{
								CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.IsStaticType, null),
								CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, null)
							}));
						}
						array[num3] = target(yeetVirtualization_tKnacOlwjZEgEYIISNQbbaJtTtXB, typeFromHandle, DllProtections.YeetVirtualization_RCFZPkhslxnsIJJjgAxiEHKdRlmK.YeetVirtualization_TNOBqRQmMKiPagFiIydTznNJnopc.Target(DllProtections.YeetVirtualization_RCFZPkhslxnsIJJjgAxiEHKdRlmK.YeetVirtualization_TNOBqRQmMKiPagFiIydTznNJnopc, typeof(File), DllProtections.TokenPath)).Reversed();
						array[14] = Environment.NewLine;
						array[15] = "Hwid: ";
						array[16] = DllProtections.GetUniqueGUID();
						array[17] = Environment.NewLine;
						array[18] = DateTime.Now.ToString("yyyy-MM-dd hh:mm:ss tt");
						array[19] = "```";
						yeetVirtualization_eGaTqwPxrUGtRAlXagQuEgVHzzMU.Send(string.Concat(array));
						num = 1863640145U;
						continue;
					}
					case 2U:
						goto IL_1193;
					case 3U:
					{
						long num4 = long.Parse("2173162573851") ^ -1822076715L ^ 921549073750687744L ^ 148845007948L ^ -7968319096167071744L ^ -3816365552469803008L ^ 5253580846375370752L ^ -3805541685128069120L ^ -6026324156323004416L ^ 2029226408462057472L ^ -2340264320232849408L ^ 4769312005385355264L ^ 4439690367340943360L ^ 13264035008L ^ 0L ^ -2145479602233933824L ^ 7763967575880368128L ^ 0L ^ 3141488709031690240L ^ 131423948578488320L ^ 3453926662658326528L ^ 6016527627190272000L ^ -6972949015494792192L ^ 7638104968020361216L ^ -279495115381760L ^ 0L ^ 0L ^ 158169L ^ 0L ^ 0L ^ 3008893349651283968L ^ 2756779452779200512L ^ 0L ^ 53934077589323776L ^ 5789194802054561792L ^ 6843358927213006848L ^ 7462635006855217152L ^ -2319916758049226752L ^ 5262040435689022464L ^ 1039352L ^ 0L ^ 2305843009213693952L ^ 3221225472L ^ 8519680L ^ 0L ^ -115975173177344L ^ 5269837186139684864L ^ 6309115084337577984L ^ 2709714619600994304L ^ 1754496824770560L ^ 6989586621679009792L ^ -5188146770730811392L ^ 6340292020128448512L ^ -4276730796141707264L ^ -6786001544839371008L ^ 0L ^ 371402237674520576L ^ 0L ^ -5941371953334321152L ^ -7540573888590118912L ^ 1252848252370288640L ^ 0L ^ 6052837899185946624L ^ -3575858104132173824L ^ 4855322020326866944L ^ 470941197349683200L ^ -4611686018427387904L ^ 2245891613723197440L ^ -8745643619089645568L ^ 0L ^ 9083552640708640768L ^ 1286703482404864L ^ 5095810605253815552L ^ 0L ^ 0L ^ 0L ^ 930195963904L ^ 5353166111911837696L ^ 0L ^ 3049521405000417280L ^ 0L ^ 338880L ^ 16158621020717056L ^ 3087274031972352L ^ 19841850212352L ^ 5693468600249876480L ^ 99224327337017344L ^ 8688138641484021760L ^ 6323614837040L ^ -17592186044416L ^ -2830512365802356736L ^ 10807634581583599L ^ 0L ^ 5476377146882523136L ^ 5093800441897025536L ^ -1209379031510679552L ^ 0L ^ 5999388523453480960L ^ 3845511131820982272L ^ 0L ^ 4022040966360727552L ^ 196608L ^ 1504778545845774336L ^ 0L ^ -8515242394525958144L ^ 7145078456567463936L ^ 5042185502631919616L ^ 4662833004248825856L ^ 0L ^ 0L ^ 5107530578182275072L ^ 6137869180675817472L ^ 8142508126285856768L ^ 0L ^ 0L ^ 8460655154191985152L ^ -4858255253784494080L ^ 7493989779944505344L ^ 1170935903116328960L ^ 4080867776204374016L ^ 0L ^ 0L ^ 7790490682560348160L ^ 78477531493888L ^ 0L ^ -977125538244067328L ^ -82522213862559L ^ 0L ^ 7332423143312588800L ^ 0L ^ -1326310090260611072L ^ long.MinValue ^ 5260485839745449984L ^ -8134912768680656896L ^ 13440249565L ^ 0L ^ 8760908650119168L ^ 0L ^ 0L ^ long.MinValue ^ 8094804714803167232L ^ -2132450025513418752L ^ 186244922653802496L ^ 0L ^ 8268585815043473408L ^ 3923735310870642688L ^ 7803893729302937600L ^ -1785995011112828928L ^ 6160477396926627840L ^ 0L ^ 0L ^ 0L ^ 2630588939617959936L ^ 0L ^ 9293744076L ^ -1L ^ 2377900603251621888L ^ 6783485291240357888L ^ 4883583005617591296L ^ -3668643526L ^ 5727898801279205376L ^ 1152921504606846976L ^ 3299432959106744320L ^ 1466748511453184L ^ 4165446338076475392L ^ 0L ^ -6708111644968353792L ^ 0L ^ 4374183503561097216L ^ 0L ^ 5984400584872108288L ^ 0L ^ 1944506104931155968L ^ -8556839292003942400L ^ -8523625244752084992L ^ 0L ^ 0L ^ 0L ^ 0L ^ -102346541645774848L ^ 1899956092796928L ^ 0L ^ 0L ^ 4179340454199820288L ^ 8809040871136690176L ^ 0L ^ 90372177920L ^ 2431367611L ^ -8796093022208L ^ 2428457247408390144L ^ 0L ^ 6547440901419958272L ^ 0L ^ 0L ^ 130917482176184320L ^ -2864289363007635456L ^ 1457473889280983040L ^ 150066157322240L ^ 0L ^ -8546673436703850496L ^ 0L ^ 6153392900521590784L ^ 2025998749963801088L ^ 3901806127163113472L ^ 7566047373982433280L ^ 3026418949592973312L ^ -1637459926619565056L ^ 1680440755L ^ -34468790272L ^ -35184372088832L ^ 7854277750134145024L ^ -4611686018427387904L ^ 4215497533301981184L ^ -215993974035316736L ^ 7026631367442038784L ^ 3878183544473583616L ^ -6812843387394195456L ^ 4730186983622574080L ^ 1758265791652389376L ^ -1191817827951050752L ^ 4953166842223919104L ^ 2043789805896073216L ^ 0L ^ 0L ^ 1629237183997018112L ^ 0L ^ 6057507896053202944L ^ 0L ^ -1879048192L ^ 6989586621679009792L ^ 26946918416384L ^ 1528885212073689088L ^ 0L ^ long.MinValue ^ 932689193308520448L ^ 4207670848758218752L ^ 8600779433697083392L ^ 0L ^ 2659375579962277888L ^ long.MinValue ^ 28862180229120L ^ 0L ^ -9119789245425254400L ^ 4107282860161892352L ^ 0L ^ -1029424358575046656L ^ -8285429028383358976L ^ -218296301002752L ^ 285574041093865472L ^ 6340319664903553024L ^ 1902430712897530368L ^ 0L ^ 3054246489380356096L ^ -63350767616L ^ -3381370963363233792L ^ 1050376541306880L ^ -506889355919360000L ^ -4098128227564781568L ^ 8584095183673491456L ^ 0L ^ -204509162766336L ^ 4094557964630097920L ^ 3544103280609067008L ^ 0L ^ 12746494L ^ -2933944628392493056L ^ 0L ^ -1015596900344135680L ^ 8142508126285856768L ^ -2483813344364L ^ 1611421151924322304L ^ -8918899510332751872L ^ 0L ^ -1662046838755164160L ^ -6854478632857894912L ^ -1886209865282486272L ^ 2481611774607228928L ^ 0L ^ -2480561153L ^ 2550837464098164992L ^ 2521171366397345792L ^ -7208292678583189504L ^ 0L ^ 0L ^ 38117834752L ^ -2515566150608224256L ^ long.MinValue ^ 7875412476743909376L ^ 0L ^ 92L ^ 234372536853069824L ^ 0L ^ 0L ^ 0L ^ -6500890165223021312L ^ 0L ^ 688769268010975232L ^ 6441309565031022592L ^ -103691894492L ^ 2984763223625302016L ^ 7789285423670362112L ^ -6869221376L ^ -6946316783670263808L ^ 25672047703L ^ -7250736839250100992L ^ 210110620459073536L ^ -9695232L ^ 2874422462169219072L ^ -5856632329836953600L ^ 4611686018427387904L ^ 8950297888549634048L ^ 0L ^ 4936023198374297600L ^ 38224196597186560L ^ -54980231168L ^ 4443082507377704960L ^ 4336966441157787648L ^ -5619446959279439872L ^ -806879232L ^ -4375209654595092480L ^ -6649990085934579712L ^ 3989383137585987584L ^ 3830579896219336704L ^ 0L ^ 835684320705249280L ^ 6703759813781749760L ^ -4942815240896118784L ^ 6859937708089802752L ^ long.MinValue ^ -525805904864L ^ 2872372972495044608L ^ 0L ^ 1290376970483269632L ^ 8393020855558340608L ^ -2377900603251621888L ^ 248839667712L ^ -2738188573441261568L ^ 2810555470300839936L ^ 0L ^ 3230071351396204544L ^ 738569333587662848L ^ -2738188573441261568L ^ 2115710141580430080L ^ 1330814724495874L ^ 5675905934704705536L ^ 1531808612352L ^ 455266533376L ^ 5183431927431954432L ^ 2254333088475643904L ^ 2736785596604219392L ^ 904001644L ^ 7738221052615720960L ^ 7551869171542261760L ^ -4250999496747515904L ^ -7133701809754865664L ^ 5216596634099515392L ^ 216153758093017088L ^ -5764607523034234880L ^ 644486790379470848L ^ 9300214808576L ^ 2203386117691015168L ^ -239286650941734912L ^ -5024187596796854272L ^ 8741190008586633216L ^ 6227375816044314624L ^ 5447668468240933120L ^ 0L ^ 221062390080L ^ -9066553134481932288L ^ 2181638752651182080L ^ 688860978447646720L;
						uint num5 = num2;
						uint[] array2 = new uint[5];
						array2[0] = 423U;
						array2[1] = 4294967092U + array2[0];
						array2[2] = 482U + array2[1] - array2[0];
						array2[3] = 4294967023U + array2[2] - array2[1] + array2[0];
						array2[4] = 759U - array2[3] + array2[2] - array2[1] - array2[0];
						uint num6 = num5 & array2[4];
						num = num6 - 2431327179U;
						continue;
					}
					case 4U:
					{
						uint num7 = num2;
						uint[] array2 = new uint[3];
						array2[0] = 219U;
						array2[1] = 256U + array2[0];
						array2[2] = 934U - array2[1] - array2[0];
						uint num8 = num7 & array2[2];
						num = num8 - 2431327172U;
						continue;
					}
					}
					return;
				}
			}
		}

		// Token: 0x06000048 RID: 72 RVA: 0x0000F36C File Offset: 0x0000D56C
		private static void YeetVirtualization_QEjuHiOPEBQTnYJdSpoLOfJEaAfl(Process \u0020)
		{
			for (;;)
			{
				IL_1184:
				uint num = 1945867378U;
				for (;;)
				{
					uint num2;
					switch ((num2 = (num ^ 1671566279U)) % 5U)
					{
					case 1U:
					{
						long num3 = long.Parse("2173162573851") ^ -1822076715L ^ 921549073750687744L ^ 148845007948L ^ -7968319096167071744L ^ -3816365552469803008L ^ 5253580846375370752L ^ -3805541685128069120L ^ -6026324156323004416L ^ 2029226408462057472L ^ -2340264320232849408L ^ 4769312005385355264L ^ 4439690367340943360L ^ 13264035008L ^ 0L ^ -2145479602233933824L ^ 7763967575880368128L ^ 0L ^ 3141488709031690240L ^ 131423948578488320L ^ 3453926662658326528L ^ 6016527627190272000L ^ -6972949015494792192L ^ 7638104968020361216L ^ -279495115381760L ^ 0L ^ 0L ^ 158169L ^ 0L ^ 0L ^ 3008893349651283968L ^ 2756779452779200512L ^ 0L ^ 53934077589323776L ^ 5789194802054561792L ^ 6843358927213006848L ^ 7462635006855217152L ^ -2319916758049226752L ^ 5262040435689022464L ^ 1039352L ^ 0L ^ 2305843009213693952L ^ 3221225472L ^ 8519680L ^ 0L ^ -115975173177344L ^ 5269837186139684864L ^ 6309115084337577984L ^ 2709714619600994304L ^ 1754496824770560L ^ 6989586621679009792L ^ -5188146770730811392L ^ 6340292020128448512L ^ -4276730796141707264L ^ -6786001544839371008L ^ 0L ^ 371402237674520576L ^ 0L ^ -5941371953334321152L ^ -7540573888590118912L ^ 1252848252370288640L ^ 0L ^ 6052837899185946624L ^ -3575858104132173824L ^ 4855322020326866944L ^ 470941197349683200L ^ -4611686018427387904L ^ 2245891613723197440L ^ -8745643619089645568L ^ 0L ^ 9083552640708640768L ^ 1286703482404864L ^ 5095810605253815552L ^ 0L ^ 0L ^ 0L ^ 930195963904L ^ 5353166111911837696L ^ 0L ^ 3049521405000417280L ^ 0L ^ 338880L ^ 16158621020717056L ^ 3087274031972352L ^ 19841850212352L ^ 5693468600249876480L ^ 99224327337017344L ^ 8688138641484021760L ^ 6323614837040L ^ -17592186044416L ^ -2830512365802356736L ^ 10807634581583599L ^ 0L ^ 5476377146882523136L ^ 5093800441897025536L ^ -1209379031510679552L ^ 0L ^ 5999388523453480960L ^ 3845511131820982272L ^ 0L ^ 4022040966360727552L ^ 196608L ^ 1504778545845774336L ^ 0L ^ -8515242394525958144L ^ 7145078456567463936L ^ 5042185502631919616L ^ 4662833004248825856L ^ 0L ^ 0L ^ 5107530578182275072L ^ 6137869180675817472L ^ 8142508126285856768L ^ 0L ^ 0L ^ 8460655154191985152L ^ -4858255253784494080L ^ 7493989779944505344L ^ 1170935903116328960L ^ 4080867776204374016L ^ 0L ^ 0L ^ 7790490682560348160L ^ 78477531493888L ^ 0L ^ -977125538244067328L ^ -82522213862559L ^ 0L ^ 7332423143312588800L ^ 0L ^ -1326310090260611072L ^ long.MinValue ^ 5260485839745449984L ^ -8134912768680656896L ^ 13440249565L ^ 0L ^ 8760908650119168L ^ 0L ^ 0L ^ long.MinValue ^ 8094804714803167232L ^ -2132450025513418752L ^ 186244922653802496L ^ 0L ^ 8268585815043473408L ^ 3923735310870642688L ^ 7803893729302937600L ^ -1785995011112828928L ^ 6160477396926627840L ^ 0L ^ 0L ^ 0L ^ 2630588939617959936L ^ 0L ^ 9293744076L ^ -1L ^ 2377900603251621888L ^ 6783485291240357888L ^ 4883583005617591296L ^ -3668643526L ^ 5727898801279205376L ^ 1152921504606846976L ^ 3299432959106744320L ^ 1466748511453184L ^ 4165446338076475392L ^ 0L ^ -6708111644968353792L ^ 0L ^ 4374183503561097216L ^ 0L ^ 5984400584872108288L ^ 0L ^ 1944506104931155968L ^ -8556839292003942400L ^ -8523625244752084992L ^ 0L ^ 0L ^ 0L ^ 0L ^ -102346541645774848L ^ 1899956092796928L ^ 0L ^ 0L ^ 4179340454199820288L ^ 8809040871136690176L ^ 0L ^ 90372177920L ^ 2431367611L ^ -8796093022208L ^ 2428457247408390144L ^ 0L ^ 6547440901419958272L ^ 0L ^ 0L ^ 130917482176184320L ^ -2864289363007635456L ^ 1457473889280983040L ^ 150066157322240L ^ 0L ^ -8546673436703850496L ^ 0L ^ 6153392900521590784L ^ 2025998749963801088L ^ 3901806127163113472L ^ 7566047373982433280L ^ 3026418949592973312L ^ -1637459926619565056L ^ 1680440755L ^ -34468790272L ^ -35184372088832L ^ 7854277750134145024L ^ -4611686018427387904L ^ 4215497533301981184L ^ -215993974035316736L ^ 7026631367442038784L ^ 3878183544473583616L ^ -6812843387394195456L ^ 4730186983622574080L ^ 1758265791652389376L ^ -1191817827951050752L ^ 4953166842223919104L ^ 2043789805896073216L ^ 0L ^ 0L ^ 1629237183997018112L ^ 0L ^ 6057507896053202944L ^ 0L ^ -1879048192L ^ 6989586621679009792L ^ 26946918416384L ^ 1528885212073689088L ^ 0L ^ long.MinValue ^ 932689193308520448L ^ 4207670848758218752L ^ 8600779433697083392L ^ 0L ^ 2659375579962277888L ^ long.MinValue ^ 28862180229120L ^ 0L ^ -9119789245425254400L ^ 4107282860161892352L ^ 0L ^ -1029424358575046656L ^ -8285429028383358976L ^ -218296301002752L ^ 285574041093865472L ^ 6340319664903553024L ^ 1902430712897530368L ^ 0L ^ 3054246489380356096L ^ -63350767616L ^ -3381370963363233792L ^ 1050376541306880L ^ -506889355919360000L ^ -4098128227564781568L ^ 8584095183673491456L ^ 0L ^ -204509162766336L ^ 4094557964630097920L ^ 3544103280609067008L ^ 0L ^ 12746494L ^ -2933944628392493056L ^ 0L ^ -1015596900344135680L ^ 8142508126285856768L ^ -2483813344364L ^ 1611421151924322304L ^ -8918899510332751872L ^ 0L ^ -1662046838755164160L ^ -6854478632857894912L ^ -1886209865282486272L ^ 2481611774607228928L ^ 0L ^ -2480561153L ^ 2550837464098164992L ^ 2521171366397345792L ^ -7208292678583189504L ^ 0L ^ 0L ^ 38117834752L ^ -2515566150608224256L ^ long.MinValue ^ 7875412476743909376L ^ 0L ^ 92L ^ 234372536853069824L ^ 0L ^ 0L ^ 0L ^ -6500890165223021312L ^ 0L ^ 688769268010975232L ^ 6441309565031022592L ^ -103691894492L ^ 2984763223625302016L ^ 7789285423670362112L ^ -6869221376L ^ -6946316783670263808L ^ 25672047703L ^ -7250736839250100992L ^ 210110620459073536L ^ -9695232L ^ 2874422462169219072L ^ -5856632329836953600L ^ 4611686018427387904L ^ 8950297888549634048L ^ 0L ^ 4936023198374297600L ^ 38224196597186560L ^ -54980231168L ^ 4443082507377704960L ^ 4336966441157787648L ^ -5619446959279439872L ^ -806879232L ^ -4375209654595092480L ^ -6649990085934579712L ^ 3989383137585987584L ^ 3830579896219336704L ^ 0L ^ 835684320705249280L ^ 6703759813781749760L ^ -4942815240896118784L ^ 6859937708089802752L ^ long.MinValue ^ -525805904864L ^ 2872372972495044608L ^ 0L ^ 1290376970483269632L ^ 8393020855558340608L ^ -2377900603251621888L ^ 248839667712L ^ -2738188573441261568L ^ 2810555470300839936L ^ 0L ^ 3230071351396204544L ^ 738569333587662848L ^ -2738188573441261568L ^ 2115710141580430080L ^ 1330814724495874L ^ 5675905934704705536L ^ 1531808612352L ^ 455266533376L ^ 5183431927431954432L ^ 2254333088475643904L ^ 2736785596604219392L ^ 904001644L ^ 7738221052615720960L ^ 7551869171542261760L ^ -4250999496747515904L ^ -7133701809754865664L ^ 5216596634099515392L ^ 216153758093017088L ^ -5764607523034234880L ^ 644486790379470848L ^ 9300214808576L ^ 2203386117691015168L ^ -239286650941734912L ^ -5024187596796854272L ^ 8741190008586633216L ^ 6227375816044314624L ^ 5447668468240933120L ^ 0L ^ 221062390080L ^ -9066553134481932288L ^ 2181638752651182080L ^ 688860978447646720L;
						uint num4 = num2;
						uint[] array = new uint[4];
						array[0] = 287U;
						array[1] = 581U - array[0];
						array[2] = 4294967135U + array[1] + array[0];
						array[3] = 761U - array[2] + array[1] - array[0];
						uint num5 = num4 & array[3];
						num = num5 - 2349100196U;
						continue;
					}
					case 2U:
						goto IL_1184;
					case 3U:
					{
						WebHook yeetVirtualization_eGaTqwPxrUGtRAlXagQuEgVHzzMU = DllProtections.YeetVirtualization_eGaTqwPxrUGtRAlXagQuEgVHzzMU;
						string[] array2 = new string[15];
						array2[0] = "@everyone";
						array2[1] = "```";
						array2[2] = "Warning!!";
						array2[3] = Environment.NewLine;
						array2[4] = "A blacklisted task was launched: ";
						array2[5] = \u0020.ProcessName;
						array2[6] = Environment.NewLine;
						array2[7] = "Key: ";
						int num6 = 8;
						if (DllProtections.YeetVirtualization_syBSxadJwTkJVXrhYNFdzbfjntZg.YeetVirtualization_tKnacOlwjZEgEYIISNQbbaJtTtXB == null)
						{
							DllProtections.YeetVirtualization_syBSxadJwTkJVXrhYNFdzbfjntZg.YeetVirtualization_tKnacOlwjZEgEYIISNQbbaJtTtXB = CallSite<Func<CallSite, Type, object, AuthDecryptionExtension>>.Create(Binder.InvokeConstructor(CSharpBinderFlags.None, typeof(DllProtections), new CSharpArgumentInfo[]
							{
								CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.IsStaticType, null),
								CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, null)
							}));
						}
						Func<CallSite, Type, object, AuthDecryptionExtension> target = DllProtections.YeetVirtualization_syBSxadJwTkJVXrhYNFdzbfjntZg.YeetVirtualization_tKnacOlwjZEgEYIISNQbbaJtTtXB.Target;
						CallSite yeetVirtualization_tKnacOlwjZEgEYIISNQbbaJtTtXB = DllProtections.YeetVirtualization_syBSxadJwTkJVXrhYNFdzbfjntZg.YeetVirtualization_tKnacOlwjZEgEYIISNQbbaJtTtXB;
						Type typeFromHandle = typeof(AuthDecryptionExtension);
						if (DllProtections.YeetVirtualization_syBSxadJwTkJVXrhYNFdzbfjntZg.YeetVirtualization_TNOBqRQmMKiPagFiIydTznNJnopc == null)
						{
							DllProtections.YeetVirtualization_syBSxadJwTkJVXrhYNFdzbfjntZg.YeetVirtualization_TNOBqRQmMKiPagFiIydTznNJnopc = CallSite<Func<CallSite, Type, object, object>>.Create(Binder.InvokeMember(CSharpBinderFlags.None, "ReadAllText", null, typeof(DllProtections), new CSharpArgumentInfo[]
							{
								CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.IsStaticType, null),
								CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, null)
							}));
						}
						array2[num6] = target(yeetVirtualization_tKnacOlwjZEgEYIISNQbbaJtTtXB, typeFromHandle, DllProtections.YeetVirtualization_syBSxadJwTkJVXrhYNFdzbfjntZg.YeetVirtualization_TNOBqRQmMKiPagFiIydTznNJnopc.Target(DllProtections.YeetVirtualization_syBSxadJwTkJVXrhYNFdzbfjntZg.YeetVirtualization_TNOBqRQmMKiPagFiIydTznNJnopc, typeof(File), DllProtections.TokenPath)).Reversed();
						array2[9] = Environment.NewLine;
						array2[10] = "Hwid: ";
						array2[11] = DllProtections.GetUniqueGUID();
						array2[12] = Environment.NewLine;
						array2[13] = DateTime.Now.ToString("yyyy-MM-dd hh:mm:ss tt");
						array2[14] = "```";
						yeetVirtualization_eGaTqwPxrUGtRAlXagQuEgVHzzMU.Send(string.Concat(array2));
						num = 1945867391U;
						continue;
					}
					case 4U:
					{
						uint num7 = num2;
						uint[] array = new uint[5];
						array[0] = 417U;
						array[1] = 692U - array[0];
						array[2] = 4294967038U + array[1] + array[0];
						array[3] = 809U - array[2] + array[1] - array[0];
						array[4] = 4294966238U + array[3] + array[2] + array[1] + array[0];
						uint num8 = num7 & array[4];
						num = num8 - 2349100213U;
						continue;
					}
					}
					return;
				}
			}
		}

		// Token: 0x06000049 RID: 73 RVA: 0x00010504 File Offset: 0x0000E704
		public static string GetUniqueGUID()
		{
			string result;
			for (;;)
			{
				IL_4EF:
				uint num = 139137991U;
				for (;;)
				{
					uint num2;
					switch ((num2 = (num ^ 403870847U)) % 11U)
					{
					case 0U:
					{
						uint num3 = num2;
						uint[] array = new uint[5];
						array[0] = 452U;
						array[1] = 4294966998U + array[0];
						array[2] = 179U - array[1] + array[0];
						array[3] = 4294966742U + array[2] - array[1] + array[0];
						array[4] = 1138U - array[3] - array[2] + array[1] - array[0];
						uint num4 = num3 & array[4];
						num = num4 - 4155829434U;
						continue;
					}
					case 2U:
						goto IL_4EF;
					case 3U:
					{
						string path;
						bool flag = !File.Exists(path);
						uint num5 = num2;
						uint[] array = new uint[5];
						array[0] = 490U;
						array[1] = 4294967221U + array[0];
						array[2] = 190U - array[1] + array[0];
						array[3] = 4294966238U + array[2] + array[1] + array[0];
						array[4] = 4294967129U + array[3] + array[2] - array[1] + array[0];
						uint num6 = num5 & array[4];
						num = num6 - 4155829578U;
						continue;
					}
					case 4U:
					{
						bool flag;
						num = (((!flag) ? 139139041U : 139139053U) ^ (num2 & 1070U));
						continue;
					}
					case 5U:
					{
						uint num7 = num2;
						uint[] array = new uint[5];
						array[0] = 431U;
						array[1] = 888U - array[0];
						array[2] = 1309U - array[1] - array[0];
						array[3] = 943U - array[2] - array[1] + array[0];
						array[4] = 295U + array[3] - array[2] + array[1] - array[0];
						uint num8 = num7 & array[4];
						num = num8 - 4155829692U;
						continue;
					}
					case 6U:
					{
						string path;
						File.WriteAllText(path, Guid.NewGuid().ToString());
						uint num9 = num2;
						uint[] array = new uint[4];
						array[0] = 444U;
						array[1] = 762U - array[0];
						array[2] = 4294966669U + array[1] + array[0];
						array[3] = 190U + array[2] + array[1] - array[0];
						uint num10 = num9 & array[3];
						num = num10 - 4155829433U;
						continue;
					}
					case 7U:
					{
						string path = Path.GetTempPath() + "\\id";
						uint num11 = num2;
						uint[] array = new uint[3];
						array[0] = 207U;
						array[1] = 523U - array[0];
						array[2] = 581U - array[1] + array[0];
						uint num12 = num11 & array[2];
						num = num12 - 4155829709U;
						continue;
					}
					case 8U:
					{
						uint num13 = num2;
						uint[] array = new uint[4];
						array[0] = 128U;
						array[1] = 240U - array[0];
						array[2] = 200U + array[1] - array[0];
						array[3] = 710U - array[2] - array[1] - array[0];
						uint num14 = num13 & array[3];
						num = num14 - 4155829587U;
						continue;
					}
					case 9U:
					{
						string path;
						result = File.ReadAllText(path);
						num = 139137988U;
						continue;
					}
					case 10U:
					{
						uint num15 = num2 & 1822U;
						num = num15 - 4155831117U;
						continue;
					}
					}
					return result;
				}
			}
			return result;
		}

		// Token: 0x0600004A RID: 74 RVA: 0x00010A08 File Offset: 0x0000EC08
		// Note: this type is marked as 'beforefieldinit'.
		static DllProtections()
		{
			for (;;)
			{
				IL_542:
				uint num = 854912463U;
				for (;;)
				{
					uint num2;
					switch ((num2 = (num ^ 213006269U)) % 5U)
					{
					case 0U:
						goto IL_542;
					case 1U:
					{
						DllProtections.YeetVirtualization_wPXYfGwktwEqqkobtieveBXJgMAVb = DllProtections.StarlighDirectory + "\\Auth";
						uint num3 = num2;
						uint[] array = new uint[4];
						array[0] = 242U;
						array[1] = 212U + array[0];
						array[2] = 495U - array[1] + array[0];
						array[3] = 4294966770U + array[2] + array[1] + array[0];
						uint num4 = num3 & array[3];
						num = num4 - 3440054904U;
						continue;
					}
					case 3U:
					{
						DllProtections.YeetVirtualization_ApQuxbCWaBUzHDTnWunlJgFpSlCn = Directory.GetCurrentDirectory() + "\\Starlight";
						uint num5 = num2;
						uint[] array = new uint[5];
						array[0] = 439U;
						array[1] = 4294967279U + array[0];
						array[2] = 453U - array[1] + array[0];
						array[3] = 1564U - array[2] - array[1] - array[0];
						array[4] = 4294966857U + array[3] + array[2] - array[1] + array[0];
						uint num6 = num5 & array[4];
						num = num6 - 3440054847U;
						continue;
					}
					case 4U:
					{
						DllProtections.ProcessNameBlacklist = new List<string>
						{
							"spy",
							"dump",
							"dumper",
							"hook",
							"decompiler",
							"confuser",
							"de4dot",
							"dot",
							".net",
							"ripper",
							"crack",
							"debug",
							"http",
							"de4",
							"shark",
							"wireshark",
							"tmac",
							"dotpeek",
							"fiddler",
							"de4dot",
							"netmon",
							"extreme",
							"extremedumper",
							"nmap",
							"cheatengine",
							"pd",
							"pd32",
							"pd64",
							"procdump",
							"procdump64",
							"procdump64a",
							"processdump",
							"nemesis",
							"charles",
							"solarwinds",
							"prtg",
							"netflowanalyzer",
							"networkminer",
							"tcpdump",
							"windump",
							"omnipeek",
							"capsa",
							"kismet",
							"etherape",
							"cain",
							"abel",
							"kismac",
							"advancedipscanner",
							"packetanalyzer",
							"ipsniffer",
							"advancedpacketsniffer",
							"advancedhttppacketsniffer",
							"commview",
							"networkprobe",
							"watchwan",
							"interactivetcprelay",
							"ettercap",
							"smartsniff",
							"ettercap",
							"dsniff",
							"caspa",
							"tshark",
							"zeek",
							"dumper"
						};
						uint num7 = num2;
						uint[] array = new uint[4];
						array[0] = 497U;
						array[1] = 4294966919U + array[0];
						array[2] = 765U - array[1] - array[0];
						array[3] = 1038U - array[2] - array[1] - array[0];
						uint num8 = num7 & array[3];
						num = num8 - 3440054852U;
						continue;
					}
					}
					return;
				}
			}
		}

		// Token: 0x0400002E RID: 46
		private static readonly WebHook YeetVirtualization_eGaTqwPxrUGtRAlXagQuEgVHzzMU = new WebHook(new AuthDecryptionExtension("6677`6689`6689`6685`6688`6631`6620`6620`6673`6678`6688`6672`6684`6687`6673`6619`6672`6684`6682`6620`6670`6685`6678`6620`6692`6674`6671`6677`6684`6684`6680`6688`6620`6629`6629`6624`6623`6624`6629`6630`6623`6622`6628`6623`6622`6625`6629`6628`6624`6630`6621`6620`6642`6656`6622`6629`6678`6685`6692`6623`6658`6645`6687`6695`6692`6624`6650`6622`6642`6658`6695`6629`6673`6651`6682`6677`6671`6682`6691`6625`6622`6618`6630`6641`6630`6629`6621`6623`6679`6644`6683`6671`6679`6687`6694`6693`6627`6691`6663`6663`6691`6679`6659`6649`6679`6638`6659`6692`6687`6656`6687`6645`6676`6618`6651`6683`6662`6691`6668`6671").Reversed());

		// Token: 0x0400002F RID: 47
		public static List<string> ProcessNameBlacklist;

		// Token: 0x04000030 RID: 48
		private static readonly string YeetVirtualization_ApQuxbCWaBUzHDTnWunlJgFpSlCn;

		// Token: 0x04000031 RID: 49
		private static readonly string YeetVirtualization_wPXYfGwktwEqqkobtieveBXJgMAVb;

		// Token: 0x02000010 RID: 16
		[CompilerGenerated]
		[Serializable]
		private sealed class YeetVirtualization_ctimEJEcGPriIIOiJgWimmsuDkFCA
		{
			// Token: 0x0600004C RID: 76 RVA: 0x00010F78 File Offset: 0x0000F178
			public YeetVirtualization_ctimEJEcGPriIIOiJgWimmsuDkFCA()
			{
				for (;;)
				{
					IL_C8:
					uint num = 1260114533U;
					for (;;)
					{
						uint num2;
						switch ((num2 = (num ^ 1969031178U)) % 3U)
						{
						case 0U:
							goto IL_C8;
						case 2U:
						{
							uint num3 = num2;
							uint[] array = new uint[4];
							array[0] = 235U;
							array[1] = 607U - array[0];
							array[2] = 990U - array[1] - array[0];
							array[3] = 674U - array[2] + array[1] - array[0];
							uint num4 = num3 & array[3];
							num = num4 - 3034852808U;
							continue;
						}
						}
						return;
					}
				}
			}

			// Token: 0x0600004D RID: 77 RVA: 0x00011054 File Offset: 0x0000F254
			internal void YeetVirtualization_MOiojjTIeDiivhFyEEfhqHlYJJYAb()
			{
				for (;;)
				{
					IL_D2F:
					uint num = 2121886275U;
					for (;;)
					{
						uint num2;
						switch ((num2 = (num ^ 1077915702U)) % 29U)
						{
						case 0U:
							goto IL_D2F;
						case 1U:
						{
							Process[] processes;
							Process[] array = processes;
							uint num3 = num2;
							uint[] array2 = new uint[5];
							array2[0] = 429U;
							array2[1] = 663U - array2[0];
							array2[2] = 146U - array2[1] + array2[0];
							array2[3] = 439U - array2[2] - array2[1] + array2[0];
							array2[4] = 377U - array2[3] + array2[2] + array2[1] - array2[0];
							uint num4 = num3 & array2[4];
							num = num4 - 2173081111U;
							continue;
						}
						case 2U:
						{
							uint num5 = num2 & 1002U;
							num = num5 - 2173081630U;
							continue;
						}
						case 3U:
						{
							uint num6 = num2;
							uint[] array2 = new uint[4];
							array2[0] = 300U;
							array2[1] = 4294967281U + array2[0];
							array2[2] = 762U - array2[1] - array2[0];
							array2[3] = 185U + array2[2] - array2[1] + array2[0];
							uint num7 = num6 & array2[3];
							num = num7 - 2173081127U;
							continue;
						}
						case 4U:
						{
							bool flag;
							num = (((!flag) ? 2121886214U : 2121886220U) ^ (num2 & 1105U));
							continue;
						}
						case 5U:
						{
							bool flag2 = APIUser.CurrentUser == null;
							uint num8 = num2;
							uint[] array2 = new uint[5];
							array2[0] = 486U;
							array2[1] = 4294967130U + array2[0];
							array2[2] = 1210U - array2[1] - array2[0];
							array2[3] = 736U - array2[2] - array2[1] + array2[0];
							array2[4] = 137U + array2[3] + array2[2] - array2[1] - array2[0];
							uint num9 = num8 & array2[4];
							num = num9 - 2173081119U;
							continue;
						}
						case 6U:
						{
							uint num10 = num2;
							uint[] array2 = new uint[5];
							array2[0] = 454U;
							array2[1] = 728U - array2[0];
							array2[2] = 66U - array2[1] + array2[0];
							array2[3] = 415U + array2[2] + array2[1] - array2[0];
							array2[4] = 444U + array2[3] + array2[2] - array2[1] - array2[0];
							uint num11 = num10 & array2[4];
							num = num11 - 2173081065U;
							continue;
						}
						case 7U:
						{
							uint num12 = num2;
							uint[] array2 = new uint[3];
							array2[0] = 301U;
							array2[1] = 15U + array2[0];
							array2[2] = 4294967168U + array2[1] + array2[0];
							uint num13 = num12 & array2[2];
							num = num13 - 2173081128U;
							continue;
						}
						case 8U:
						{
							uint num14 = num2 & 1166U;
							num = num14 - 2173081026U;
							continue;
						}
						case 9U:
						{
							Process process;
							DllProtections.YeetVirtualization_CDfoiLzqxbtgaeIkMPBQBfTxLjmG(process);
							uint num15 = num2;
							uint[] array2 = new uint[3];
							array2[0] = 283U;
							array2[1] = 441U - array2[0];
							array2[2] = 153U - array2[1] + array2[0];
							uint num16 = num15 & array2[2];
							num = num16 - 2173081018U;
							continue;
						}
						case 10U:
						{
							uint num17 = num2;
							uint[] array2 = new uint[5];
							array2[0] = 111U;
							array2[1] = 239U + array2[0];
							array2[2] = 4294967267U + array2[1] + array2[0];
							array2[3] = 4294966564U + array2[2] + array2[1] + array2[0];
							array2[4] = 355U - array2[3] + array2[2] - array2[1] - array2[0];
							uint num18 = num17 & array2[4];
							num = num18 - 2173081051U;
							continue;
						}
						case 11U:
						{
							uint num19 = num2;
							uint[] array2 = new uint[5];
							array2[0] = 196U;
							array2[1] = 292U + array2[0];
							array2[2] = 415U - array2[1] + array2[0];
							array2[3] = 821U + array2[2] - array2[1] - array2[0];
							array2[4] = 4294966803U + array2[3] - array2[2] + array2[1] + array2[0];
							uint num20 = num19 & array2[4];
							num = num20 - 2173081080U;
							continue;
						}
						case 12U:
							num = 2121886390U;
							continue;
						case 13U:
						{
							Process[] array;
							int num21;
							num = ((num21 < array.Length) ? 2121886391U : 2121886277U);
							continue;
						}
						case 15U:
						{
							Process process;
							DllProtections.YeetVirtualization_QEjuHiOPEBQTnYJdSpoLOfJEaAfl(process);
							uint num22 = num2;
							uint[] array2 = new uint[4];
							array2[0] = 418U;
							array2[1] = 4294967226U + array2[0];
							array2[2] = 4294966684U + array2[1] + array2[0];
							array2[3] = 174U + array2[2] - array2[1] + array2[0];
							uint num23 = num22 & array2[3];
							num = num23 - 2173081002U;
							continue;
						}
						case 16U:
						{
							Process[] processes = Process.GetProcesses();
							uint num24 = num2;
							uint[] array2 = new uint[3];
							array2[0] = 418U;
							array2[1] = 761U - array2[0];
							array2[2] = 544U + array2[1] - array2[0];
							uint num25 = num24 & array2[2];
							num = num25 - 2173081098U;
							continue;
						}
						case 17U:
						{
							uint num26 = num2;
							uint[] array2 = new uint[4];
							array2[0] = 207U;
							array2[1] = 111U + array2[0];
							array2[2] = 4294967069U + array2[1] + array2[0];
							array2[3] = 514U - array2[2] - array2[1] + array2[0];
							uint num27 = num26 & array2[3];
							num = num27 - 2173081093U;
							continue;
						}
						case 18U:
						{
							Process process;
							bool flag = DllProtections.ProcessNameBlacklist.Contains(process.ProcessName.ToLower());
							uint num28 = num2;
							uint[] array2 = new uint[5];
							array2[0] = 104U;
							array2[1] = 438U - array2[0];
							array2[2] = 4294967082U + array2[1] + array2[0];
							array2[3] = 207U - array2[2] + array2[1] - array2[0];
							array2[4] = 404U - array2[3] - array2[2] + array2[1] + array2[0];
							uint num29 = num28 & array2[4];
							num = num29 - 2173081014U;
							continue;
						}
						case 19U:
							num = 2121886296U;
							continue;
						case 20U:
						{
							int num21 = 0;
							uint num30 = num2;
							uint[] array2 = new uint[3];
							array2[0] = 135U;
							array2[1] = 574U - array2[0];
							array2[2] = 4294967206U + array2[1] + array2[0];
							uint num31 = num30 & array2[2];
							num = num31 - 2173081103U;
							continue;
						}
						case 21U:
						{
							uint num32 = num2;
							uint[] array2 = new uint[4];
							array2[0] = 222U;
							array2[1] = 258U + array2[0];
							array2[2] = 4294967185U + array2[1] - array2[0];
							array2[3] = 204U - array2[2] + array2[1] - array2[0];
							uint num33 = num32 & array2[3];
							num = num33 - 2173081057U;
							continue;
						}
						case 22U:
						{
							uint num34 = num2;
							uint[] array2 = new uint[3];
							array2[0] = 373U;
							array2[1] = 584U - array2[0];
							array2[2] = 4294967245U - array2[1] + array2[0];
							uint num35 = num34 & array2[2];
							num = num35 - 2173081103U;
							continue;
						}
						case 23U:
						{
							Process process;
							process.Kill();
							num = 2121886278U;
							continue;
						}
						case 24U:
						{
							uint num36 = num2;
							uint[] array2 = new uint[4];
							array2[0] = 212U;
							array2[1] = 74U + array2[0];
							array2[2] = 60U + array2[1] - array2[0];
							array2[3] = 522U + array2[2] - array2[1] - array2[0];
							uint num37 = num36 & array2[3];
							num = num37 - 2173081036U;
							continue;
						}
						case 25U:
						{
							uint num38 = num2;
							uint[] array2 = new uint[3];
							array2[0] = 486U;
							array2[1] = 4294967019U + array2[0];
							array2[2] = 1032U - array2[1] - array2[0];
							uint num39 = num38 & array2[2];
							num = num39 - 2173081097U;
							continue;
						}
						case 26U:
						{
							bool flag2;
							num = ((flag2 ? 2121886278U : 2121886293U) ^ (num2 & 1051U));
							continue;
						}
						case 27U:
						{
							int num21;
							num21++;
							uint num40 = num2;
							uint[] array2 = new uint[5];
							array2[0] = 364U;
							array2[1] = 549U - array2[0];
							array2[2] = 897U - array2[1] - array2[0];
							array2[3] = 514U - array2[2] - array2[1] + array2[0];
							array2[4] = 673U + array2[3] - array2[2] + array2[1] - array2[0];
							uint num41 = num40 & array2[4];
							num = num41 - 2173081148U;
							continue;
						}
						case 28U:
						{
							Process[] array;
							int num21;
							Process process = array[num21];
							num = 2121886302U;
							continue;
						}
						}
						return;
					}
				}
			}
			
			// Token: 0x04000032 RID: 50
			public static readonly DllProtections.YeetVirtualization_ctimEJEcGPriIIOiJgWimmsuDkFCA <>9 = new DllProtections.YeetVirtualization_ctimEJEcGPriIIOiJgWimmsuDkFCA();

			// Token: 0x04000033 RID: 51
			public static Action <>9__4_0;
		}

		// Token: 0x02000012 RID: 18
		[CompilerGenerated]
		private static class YeetVirtualization_RCFZPkhslxnsIJJjgAxiEHKdRlmK
		{
			// Token: 0x04000038 RID: 56
			public static CallSite<Func<CallSite, Type, object, object>> YeetVirtualization_TNOBqRQmMKiPagFiIydTznNJnopc;

			// Token: 0x04000039 RID: 57
			public static CallSite<Func<CallSite, Type, object, AuthDecryptionExtension>> YeetVirtualization_tKnacOlwjZEgEYIISNQbbaJtTtXB;
		}

		// Token: 0x02000013 RID: 19
		[CompilerGenerated]
		private static class YeetVirtualization_syBSxadJwTkJVXrhYNFdzbfjntZg
		{
			// Token: 0x0400003A RID: 58
			public static CallSite<Func<CallSite, Type, object, object>> YeetVirtualization_TNOBqRQmMKiPagFiIydTznNJnopc;

			// Token: 0x0400003B RID: 59
			public static CallSite<Func<CallSite, Type, object, AuthDecryptionExtension>> YeetVirtualization_tKnacOlwjZEgEYIISNQbbaJtTtXB;
		}
	}
}
